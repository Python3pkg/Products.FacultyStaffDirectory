from archetypes.schemaextender.field import ExtensionField
from archetypes.schemaextender.interfaces import ISchemaExtender
from Products.Archetypes.atapi import *
from zope.interface import implements, Interface
from zope.component import adapts, provideAdapter

from Products.FacultyStaffDirectory import interfaces

# Any field to add to your extender must have ExtensionField as its first subclass
# We provide you with an extension field class for each type of field in archetypes
#for $at_type in $at_field_types
class _Extension${at_type}(ExtensionField, ${at_type}): pass
#end for
    
class ${extendertype_classname}(object):
    """ an adapter that adds fields to content having the ${interface_to_extend} interface
    """
    adapts(interfaces.${interface_to_extend})
    implements(ISchemaExtender)
    
    _fields = [
        _ExtensionStringField('mobilePhone',
                              required=False,
                              searchable=True,
                              schemata='Extender Generated Fields',
                              widget=StringWidget(
                                label=u'Mobile Phone',
                                description=u'Your Mobile Phone Number',
                              )
        )
    ]
    
    def __init__(self, context):
        self.context = context
        
    def getFields(self):
        return self._fields